phi = [
    "(F(snow_depth) | X(qc))",
    "((camera_image_data & hydrologic_data) | X(mobile_sensor_data))",
    "service_response",
    "G((utc_time U snow_depth))",
    "G((user_privileges U backup_server))",
    "(G(nws_alerts) | (ess_connection U data_from_ess))",
    "X(system_alert)",
    "(G(user_privileges) | surface_condition)",
    "system_reliable",
    "(surface_condition | X(network_management) | pavement_condition)",
    "((mobile_sensor_data & X(platform_vehicle_data)) | F(sensor_metadata))",
    "(F(authentication) | backup_server | utc_timestamp)",
    "(F(metadata_update) | network_management)",
    "G((archiving U dynamic_library))",
    "(F(collect) | pavement_condition | utc_timestamp)",
    "X(service_provider)",
    "(sensor_metadata | (utc_timestamp U snow_depth))",
    "G(ess_connection U data_subscription)",
    "network_management",
    "(derived_data | F(data_archiving))",
    "(X(surface_condition) | dynamic_library)",
    "metadata_update | F(hazard_report) | gps_location",
    "pavement_condition",
    "(F(nws_alerts) | dynamic_library)",
    "G((data_storage U data_sharing_agreement))",
    "F(dynamic_library) | (camera_image_data & data_integrity)",
    "(hydrologic_data | F(auth..._validation))",
    "F(time_critical_data) | snow_depth",
    "(latency | G(((data_volume_high U failover) & hydrologic_data)))",
    "(utc_time | X(network_management))",
    "G(dynamic_library)",
    "(query_by_location | system_uptime)",
    "F(authentication) | F(qc)",
    "F(network_management) | data_sharing_agreement",
    "G(sensor_failure)",
    "(F(qc) | X(data_sharing_agreement))",
    "F(platform_vehicle_data)",
    "F((ess_metadata & X(gps_location)))",
    "X(sensor_metadata)",
    "(dynamic_library | data_archiving)",
    "((wind_speed U data_alert) & X(sensor_metadata))",
    "X(camera_image_data)",
    "F(user_privileges) | surface_condition",
    "(F(network_management) | sensor_failure) | data_sharing_agreement",
    "G(((backup_server U qc) | X(usc...ta_storage)))",
    "(pavement_condition | F(data_query))",
    "F(hazard_report) | dynamic_library",
    "F(automatic_recovery) | data_integrity",
    "((sensor_failure U gps_location) & system_uptime)",
    "(F(camera_image_data) | dynamic_library)",
    "F(change_notification) | X(sensor_failure)",
    "(G(data_query) | dynamic_library)",
    "query_by_quality",
    "(F(mobile_sensor_data) | sensor_failure)",
    "F(ess_metadata) | utc_timestamp",
    "(system_reliable | X(dynamic_library) | F(graph_processing))",
    "X(ess_connection) | query_by_location",
    "(F(collect) | data_request)",
    "(pavement_temperature | dataquery)",
    "F(time_critical_data) | service_response",
    "F(redundant_hardware) | utc_time",
    "query_by_time",
    "F(data_access) | utc_time",
    "(camera_image_data | gps_location) | F(metadata_update)",
    "F(sensor_metadata) | qc",
    "X(platform_vehicle_data) | dynamic_library",
    "G(((data_storage U visibility)))",
    "F(hydrologic_data)",
    "F(nws_alerts) | system_performance",
    "X(sensor_metadata) | service_provider",
    "system_uptime | G(dynamic_library)",
    "((latency & service_response) | F(backup_server))",
    "X(pavement_temperature)",
    "F(platform_vehicle_data)",
    "F(metadata_update)",
    "(latency | dynamic_library)",
    "G(out_of_range_value U dynamic_library)",
    "F(network_management) | qc",
    "X(change_notification)",
    "(utc_timestamp | F(hazard_report))",
    "sensor_metadata",
    "((road_condition & F(dynamic_library)) | X(camera_image_data))",
    "(road_pavement_data | query_by_location)",
    "F(pavement_condition) | dynamic_library",
    "(query_by_source | data_query)",
    "G((authorization U gps_location))",
    "(latency | hydrologic_data)",
    "G(dynamic_library)",
    "F(time_critical_data)",
    "F(network_management)",
    "(service_response | road_condition)",
    "((gps_location & F(metadata_update)) | X(pavement_temperature))",
    "(F(sensor_metadata) | data_query)",
    "F(authentication)",
    "F(hydrologic_data)",
    "service_provider | pavement_temperature | X(metadata_update)",
    "((wind_speed & dynamic_library) | G(data_sharing_agreement))",
    "pavement_condition | F(data_query)",
    "(sensor_metadata | F(data_integrity))",
    "F(metadata_update) | hydrologic_data",
    "network_management | X(sensor_metadata)",
    "F(camera_image_data) | gps_location",
    "X(sensor_metadata) | hazard_report",
    "(dynamic_library | pavement_condition)",
    "G((utc_timestamp U dynamic_library))",
    "(F(camera_image_data) | data_query)",
    "gps_location | sensor_metadata",
    "F(platform_vehicle_data) | metadata_update",
    "G((sensor_failure U archive))",
    "pavement_condition | qc",
    "G((hydrologic_data U data_query))",
    "data_integrity | F(camera_image_data)",
    "(latency | dynamic_library)",
    "X(ess_metadata) | pavement_condition",
    "F(sensor_metadata) | gps_location",
    "F(platform_vehicle_data) | dynamic_library",
    "((camera_image_data & F(metadata_update)) | X(user_privileges))",
    "(network_management | data_archiving)",
    "X(redundant_hardware)",
    "F(camera_image_data)",
    "(hydrologic_data | F(sensor_metadata))",
    "(pavement_condition | gps_location)",
    "(service_provider | X(archive))",
    "F(network_management)",
    "F(sensor_metadata) | qc",
    "dynamic_library | query_by_quality",
    "(F(camera_image_data) | sensor_failure)",
    "X(platform_vehicle_data)",
    "(hydrologic_data | data_query)",
    "G((utc_timestamp U pavement_condition))",
    "(qc | X(metadata_update) | data_query)",
    "F(sensor_metadata) | gps_location",
    "F(camera_image_data) | data_integrity",
    "((network_management & F(qc)) | X(gps_location))",
    "F(platform_vehicle_data) | dynamic_library",
    "G(ess_connection U data_sharing_agreement)",
    "F(sensor_metadata)",
    "F(hazard_report) | dynamic_library",
    "F(hydrologic_data) | gps_location",
    "(latency | F(metadata_update))",
    "((network_management & qc) | F(data_sharing_agreement))",
    "F(sensor_metadata)",
    "sensor_failure",
    "(F(camera_image_data) | dynamic_library)",
    "F(platform_vehicle_data) | qc",
    "F(sensor_metadata)",
    "(hydrologic_data | dynamic_library)",
    "G((pavement_condition U qc))",
    "F(metadata_update) | gps_location",
    "(system_uptime | qc)",
    "F(sensor_metadata) | gps_location",
    "F(camera_image_data) | hydrologic_data",
    "query_by_location",
    "(network_management | F(metadata_update))",
    "F(sensor_metadata) | dynamic_library",
    "F(platform_vehicle_data)",
    "F(sensor_failure) | dynamic_library",
    "F(camera_image_data) | qc",
    "X(network_management)",
    "(road_condition | X(metadata_update))",
    "F(hydrologic_data) | dynamic_library",
    "(sensor_metadata | qc)",
    "G((gps_location U dynamic_library))",
    "(F(camera_image_data) | network_management)",
    "F(sensor_metadata) | hydrologic_data",
    "F(platform_vehicle_data)",
    "(dynamic_library | sensor_failure)",
    "F(camera_image_data)",
    "X(metadata_update)",
    "((latency & gps_location) | F(dynamic_library))",
    "(network_management | qc)",
    "F(sensor_metadata) | hydrologic_data",
    "F(platform_vehicle_data)",
    "(sensor_failure | dynamic_library)",
    "F(camera_image_data)",
    "(qc | X(metadata_update))",
    "dynamic_library",
    "(F(platform_vehicle_data) | hydrologic_data)",
    "qc | sensor_failure",
    "(camera_image_data | F(metadata_update))",
    "F(network_management)",
    "F(sensor_metadata)",
    "(dynamic_library | gps_location)",
    "F(platform_vehicle_data)",
    "(sensor_failure | qc)",
    "G(dynamic_library)",
    "F(camera_image_data)",
    "((platform_vehicle_data & F(metadata_update)) | X(user_privileges))",
    "network_management | hydrologic_data",
    "(sensor_metadata | qc)",
    "F(platform_vehicle_data)",
    "sensor_failure | dynamic_library",
    "F(camera_image_data)",
    "gps_location",
    "F(network_management)",
    "F(sensor_metadata)",
    "dynamic_library | sensor_failure",
    "F(platform_vehicle_data)",
    "F(camera_image_data)",
    "(network_management | qc)",
    "F(sensor_metadata)",
    "hydrologic_data | dynamic_library",
    "F(platform_vehicle_data)",
    "(sensor_failure | qc)",
    "F(camera_image_data)",
    "dynamic_library | gps_location",
    "F(sensor_metadata)",
    "(network_management | hydrologic_data)",
    "F(platform_vehicle_data)",
    "(sensor_failure | qc)",
    "F(camera_image_data)",
    "gps_location",
    "(network_management | F(metadata_update))",
    "dynamic_library | sensor_failure",
    "F(sensor_metadata)",
    "F(platform_vehicle_data)",
    "(qc | gps_location)",
    "F(camera_image_data)",
    "network_management",
    "F(sensor_failure)",
    "dynamic_library",
    "F(platform_vehicle_data)",
    "(hydrologic_data | qc)",
    "F(camera_image_data)",
    "gps_location",
    "(network_management | dynamic_library)",
    "sensor_failure | qc",
    "F(sensor_metadata)",
    "F(platform_vehicle_data)",
    "(camera_image_data | hydrologic_data)",
    "F(network_management)",
    "dynamic_library | sensor_failure",
    "F(sensor_metadata)",
    "platform_vehicle_data | qc",
    "F(camera_image_data)",
    "gps_location | hydrologic_data",
    "F(network_management)",
    "F(sensor_failure)",
    "dynamic_library",
    "F(platform_vehicle_data)",
    "F(sensor_metadata)",
    "(hydrologic_data | qc)",
    "F(camera_image_data)",
    "gps_location",
    "dynamic_library | sensor_failure",
    "F(network_management)",
    "F(sensor_failure)",
    "hydrologic_data | qc",
    "F(sensor_metadata)",
    "F(platform_vehicle_data)",
    "F(camera_image_data)",
    "gps_location",
    "(network_management | dynamic_library)",
    "sensor_failure",
    "F(sensor_metadata)",
    "F(platform_vehicle_data)",
    "(camera_image_data | hydrologic_data)",
    "network_management",
    "dynamic_library",
    "sensor_failure | qc",
    "F(sensor_metadata)",
    "F(platform_vehicle_data)",
    "F(camera_image_data)",
    "gps_location",
    "(hydrologic_data | dynamic_library)",
    "sensor_failure",
    "(F(sensor_metadata) | qc)",
    "F(platform_vehicle_data)",
    "F(camera_image_data)",
    "(gps_location | hydrologic_data)",
    "network_management",
    "dynamic_library",
    "sensor_failure",
    "F(sensor_metadata)",
    "F(platform_vehicle_data)",
    "F(camera_image_data)",
    "gps_location",
    "(hydrologic_data | qc)",
    "dynamic_library",
    "sensor_failure",
    "F(sensor_metadata)",
    "(F(platform_vehicle_data) | qc)",
    "(camera_image_data | hydrologic_data)",
    "network_management",
    "dynamic_library",
    "sensor_failure",
    "F(sensor_metadata)",
    "platform_vehicle_data",
    "(F(camera_image_data) | hydrologic_data)",
    "gps_location",
    "network_management",
    "dynamic_library",
    "sensor_failure",
    "F(sensor_metadata)",
    "F(platform_vehicle_data)",
    "F(camera_image_data)",
    "(hydrologic_data | qc)",
    "gps_location",
    "network_management",
    "dynamic_library",
    "sensor_failure",
    "F(sensor_metadata)",
    "F(platform_vehicle_data)",
    "F(camera_image_data)",
    "gps_location",
    "hydrologic_data",
    "network_management",
    "dynamic_library",
    "sensor_failure",
    "F(sensor_metadata)",
    "F(platform_vehicle_data)",
    "F(camera_image_data)",
    "gps_location",
    "hydrologic_data",
    "network_management",
    "dynamic_library",
    "sensor_failure",
    "F(sensor_metadata)",
    "F(platform_vehicle_data)",
    "F(camera_image_data)",
    "gps_location",
    "hydrologic_data",
    "dynamic_library",
    "sensor_failure",
    "F(sensor_metadata)",
    "F(platform_vehicle_data)",
    "F(camera_image_data)",
    "gps_location",
    "hydrologic_data",
    "dynamic_library",
    "sensor_failure",
    "(F(sensor_metadata) | qc)",
    "F(platform_vehicle_data)",
    "F(camera_image_data)",
    "gps_location",
    "hydrologic_data",
    "dynamic_library",
    "sensor_failure",
    "F(sensor_metadata)",
    "F(platform_vehicle_data)",
    "F(camera_image_data)",
    "gps_location",
    "hydrologic_data",
    "dynamic_library",
    "sensor_failure"
]
ltl_keywords = {'F', 'false', 'G', 'U', 'R', 'X', 'true', 'W'}
logical_symbols = {'&', '->', '!', '(', ')', '|', '<->'}
